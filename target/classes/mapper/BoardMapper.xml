<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="boardDao">
	
 	<resultMap type="boardc" id="board">
		<result column="RN" property="rowNum"/>
		<result column="NUM" property="num"/>
		<result column="TITLE" property="title"/>
		<result column="WRITER" property="writer"/>
		<result column="CONTENT" property="content"/>
		<result column="REGDATE" property="regdate"/>
		<result column="YOUTUBE_URL" property="youtubeUrl"/>
		<result column="YOUTUBE_URL_UPDATE" property="youtubeUrlUpdate"/>
		<result column="UPDATE_DATE" property="updateDate"/>
		<result column="WRITE_DATE" property="writeDate"/>
		<result column="BOARD_LIKE" property="boardLike"/>
		<result column="CNT" property="cnt"/>
		<result column="FILE_NAME" property="fileName"/>
		<result column="FILE_PATH" property="filePath"/>
		<result column="FILE_UUID" property="fileUuid"/>
	
	</resultMap>
	
	
	
	
	
	
	
	
	<select id="boardList" resultMap="board">
	/*페이지 네이션*/
		SELECT * FROM
		(SELECT ROWNUM AS RN, a.*
		 FROM (SELECT 
		 	  	(SELECT mem_id FROM youtube_member_jjh WHERE mem_id = writer AND ROWNUM = 1) AS writer,
				   num, 
				   CASE WHEN LENGTH(title) > 10 
	    		   THEN SUBSTR(title, 1, 10) || '...'
	    	 	   ELSE title
	    		   END title, 
				   CASE WHEN LENGTH(content) > 50 
	    		   THEN SUBSTR(content, 1, 50) || '...'
	    	 	   ELSE content
	    		   END content,
	    		   to_char(regdate,'yyyy-mm-dd') as regdate,
	    		   to_char(update_date,'yyyy-mm-dd') as update_date,
	    		  <!--  nvl(update_date,to_date('0001-01-01','yyyy-mm-dd')) as update_date, -->
				   to_char(write_date,'yyyy-mm-dd') as write_date,
				   cnt,
				   substr(youtube_url,18) as youtube_url,
                    (
					    select count(like_idx)
						 	from youtube_like_jjh
						 	where 
					            num = youtube_jjh.num
					    
					    ) as board_like
				   
		<!-- select num,
			   title,
			   writer,
			   content,
			   regdate,
			   cnt -->
		from youtube_jjh
		where 1=1
		<if test="searchCondition != null and searchCondition != ''">
	   	 <choose>
			<when test="searchCondition == 'writer'">
				 AND writer LIKE '%${boardSearchWord}%'
			</when>
			<when test="searchCondition == 'title'">
				 AND title LIKE '%${boardSearchWord}%'
			</when>
			<when test="searchCondition == 'content'">
				 AND content LIKE '%${boardSearchWord}%'
			</when>
		 </choose>				
	   </if>
	
			ORDER BY  regdate DESC, num desc) a)
		
			
		   <![CDATA[
		   WHERE RN BETWEEN (#{criteria.page} - 1) * #{criteria.perPageNum} + 1 AND #{criteria.page} * #{criteria.perPageNum}
				]]>
	</select>
	
	<select id="boardDetail" resultMap="board" parameterType="Integer">
		select num, 
			   title,
			   writer,
			   content,
			   regdate,
			   substr(youtube_url,18) as youtube_url,
			   youtube_url as youtube_url_update,
			   to_char(write_date,'yyyy-mm-dd') as write_date,
			   cnt,
			   
                    (
					    select mem_idx
					 	from youtube_like_jjh
					 	where 
				            num = youtube_jjh.num and rownum = 1
					    
					 ) as mem_idx,
			    
					 (
							select a.mem_id
	                              from youtube_member_jjh a, youtube_jjh b
	                              where a.mem_id = (
	                                  select writer
	                                  from youtube_jjh
	                                  where num = #{num}
	                              )and rownum = 1
						) as to_mem_id,
						youtube_member_jjh.file_name as file_name,
	                    youtube_member_jjh.file_path as file_path,
	                    youtube_member_jjh.file_uuid as file_uuid
				   	
				   
				    
				from youtube_jjh full outer join youtube_member_jjh
				on youtube_jjh.writer = youtube_member_jjh.mem_id
				where num = #{num}
				
	</select>
	
	<insert id="registerBoard" parameterType="boardc">
	insert into youtube_jjh (
			num,
			title,
			writer,
			content,
			youtube_url,
			regdate,
			write_date
			)
	values(
			youtube_jjh_seq.nextval,
			#{title},
			#{writer},
			#{content},
			#{youtubeUrl},
			SYSDATE,
			#{writeDate}
		)
	
	</insert>
	
	<update id="updateBoard" parameterType="boardc">
	update youtube_jjh
	set 	title = #{title},
			writer = #{writer},
			youtube_url = #{youtubeUrl},
			<!-- youtube_url_update = #{youtubeUrlUpdate}, -->
			content = #{content},
			regdate = #{regdate},
			write_date = #{writeDate},
			update_date = SYSDATE
			
	where num = #{num}
	
	</update>
	
	<delete id="deleteBoard" parameterType="Integer">
	delete from youtube_jjh
	where num = #{num}
	
	</delete>
	
	<select id="boardListCount" resultType="Integer" >
	SELECT 
		COUNT(DISTINCT num)
    FROM youtube_jjh
	WHERE 1=1
		<if test="searchCondition != null and searchCondition != ''">
	   	 <choose>
			<when test="searchCondition == 'writer'">
				 AND writer LIKE '%${boardSearchWord}%'
			</when>
			<when test="searchCondition == 'title'">
				 AND title LIKE '%${boardSearchWord}%'
			</when>
			<when test="searchCondition == 'content'">
				 AND content LIKE '%${boardSearchWord}%'
			</when>
		 </choose>				
	   </if>
	</select>
	
	
	
	<!-- 게시글 조회수 증가 -->
	<update id="updateViewCount" parameterType="boardLikec">
		update youtube_jjh
		set cnt = cnt + 1
		where num = #{num}
	
	</update>
	
	<!-- 게시글 좋아요 하기 -->
	<insert id="boardLike" parameterType="boardLikec">
		insert into youtube_like_jjh(
			like_idx,
			num,
			mem_idx
			)
		values(
			youtube_like_jjh_seq.nextval,
			#{num},
			#{memIdx}
		)
			
	</insert>
	
	
	<!-- 좋아요 눌렀는지 확인 -->
	<select id="boardFindLike" resultType="Integer" parameterType="boardLikec">
	 	select count(*)
	 	from youtube_like_jjh
	 	where num = #{num} and mem_idx = #{memIdx} 
	 </select>
	 
	 <!-- 게시글 좋아요 개수 -->
	<select id="boardLikeCount" resultType="Integer">
	/*여기 쿼리*/
	 	select count(like_idx)
	 	from youtube_like_jjh
	 	where num = #{num}
	 </select>
	 
	 <!-- 좋아요 취소 -->
	 <delete id="boardLikeDelete" parameterType="Integer">
       	 delete from youtube_like_jjh
         where num = #{num} and mem_idx = #{memIdx}
      </delete>
      
      <!-- 댓글 입력 -->
	
</mapper>